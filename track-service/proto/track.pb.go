// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/track.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Track struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Album         string                 `protobuf:"bytes,4,opt,name=album,proto3" json:"album,omitempty"`
	DurationSec   int32                  `protobuf:"varint,5,opt,name=duration_sec,json=durationSec,proto3" json:"duration_sec,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Track) Reset() {
	*x = Track{}
	mi := &file_proto_track_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{0}
}

func (x *Track) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Track) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Track) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *Track) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *Track) GetDurationSec() int32 {
	if x != nil {
		return x.DurationSec
	}
	return 0
}

func (x *Track) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type CreateTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Album         string                 `protobuf:"bytes,3,opt,name=album,proto3" json:"album,omitempty"`
	DurationSec   int32                  `protobuf:"varint,4,opt,name=duration_sec,json=durationSec,proto3" json:"duration_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTrackRequest) Reset() {
	*x = CreateTrackRequest{}
	mi := &file_proto_track_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrackRequest) ProtoMessage() {}

func (x *CreateTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrackRequest.ProtoReflect.Descriptor instead.
func (*CreateTrackRequest) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTrackRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTrackRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *CreateTrackRequest) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *CreateTrackRequest) GetDurationSec() int32 {
	if x != nil {
		return x.DurationSec
	}
	return 0
}

type CreateTrackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Track         *Track                 `protobuf:"bytes,1,opt,name=track,proto3" json:"track,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTrackResponse) Reset() {
	*x = CreateTrackResponse{}
	mi := &file_proto_track_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTrackResponse) ProtoMessage() {}

func (x *CreateTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTrackResponse.ProtoReflect.Descriptor instead.
func (*CreateTrackResponse) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTrackResponse) GetTrack() *Track {
	if x != nil {
		return x.Track
	}
	return nil
}

type GetTrackByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrackByIDRequest) Reset() {
	*x = GetTrackByIDRequest{}
	mi := &file_proto_track_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrackByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackByIDRequest) ProtoMessage() {}

func (x *GetTrackByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTrackByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{3}
}

func (x *GetTrackByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTrackByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Track         *Track                 `protobuf:"bytes,1,opt,name=track,proto3" json:"track,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTrackByIDResponse) Reset() {
	*x = GetTrackByIDResponse{}
	mi := &file_proto_track_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTrackByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackByIDResponse) ProtoMessage() {}

func (x *GetTrackByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTrackByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{4}
}

func (x *GetTrackByIDResponse) GetTrack() *Track {
	if x != nil {
		return x.Track
	}
	return nil
}

type GetAllTracksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Page          int64                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int64                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllTracksRequest) Reset() {
	*x = GetAllTracksRequest{}
	mi := &file_proto_track_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTracksRequest) ProtoMessage() {}

func (x *GetAllTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTracksRequest.ProtoReflect.Descriptor instead.
func (*GetAllTracksRequest) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllTracksRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetAllTracksRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *GetAllTracksRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllTracksRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAllTracksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tracks        []*Track               `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllTracksResponse) Reset() {
	*x = GetAllTracksResponse{}
	mi := &file_proto_track_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllTracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTracksResponse) ProtoMessage() {}

func (x *GetAllTracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTracksResponse.ProtoReflect.Descriptor instead.
func (*GetAllTracksResponse) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllTracksResponse) GetTracks() []*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

type UpdateTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Artist        string                 `protobuf:"bytes,3,opt,name=artist,proto3" json:"artist,omitempty"`
	Album         string                 `protobuf:"bytes,4,opt,name=album,proto3" json:"album,omitempty"`
	DurationSec   int32                  `protobuf:"varint,5,opt,name=duration_sec,json=durationSec,proto3" json:"duration_sec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTrackRequest) Reset() {
	*x = UpdateTrackRequest{}
	mi := &file_proto_track_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrackRequest) ProtoMessage() {}

func (x *UpdateTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrackRequest.ProtoReflect.Descriptor instead.
func (*UpdateTrackRequest) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTrackRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTrackRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTrackRequest) GetArtist() string {
	if x != nil {
		return x.Artist
	}
	return ""
}

func (x *UpdateTrackRequest) GetAlbum() string {
	if x != nil {
		return x.Album
	}
	return ""
}

func (x *UpdateTrackRequest) GetDurationSec() int32 {
	if x != nil {
		return x.DurationSec
	}
	return 0
}

type UpdateTrackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTrackResponse) Reset() {
	*x = UpdateTrackResponse{}
	mi := &file_proto_track_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTrackResponse) ProtoMessage() {}

func (x *UpdateTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTrackResponse.ProtoReflect.Descriptor instead.
func (*UpdateTrackResponse) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTrackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTrackRequest) Reset() {
	*x = DeleteTrackRequest{}
	mi := &file_proto_track_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTrackRequest) ProtoMessage() {}

func (x *DeleteTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTrackRequest.ProtoReflect.Descriptor instead.
func (*DeleteTrackRequest) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTrackRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTrackResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTrackResponse) Reset() {
	*x = DeleteTrackResponse{}
	mi := &file_proto_track_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTrackResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTrackResponse) ProtoMessage() {}

func (x *DeleteTrackResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_track_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTrackResponse.ProtoReflect.Descriptor instead.
func (*DeleteTrackResponse) Descriptor() ([]byte, []int) {
	return file_proto_track_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteTrackResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_track_proto protoreflect.FileDescriptor

const file_proto_track_proto_rawDesc = "" +
	"\n" +
	"\x11proto/track.proto\x12\x05track\"\x9d\x01\n" +
	"\x05Track\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x03 \x01(\tR\x06artist\x12\x14\n" +
	"\x05album\x18\x04 \x01(\tR\x05album\x12!\n" +
	"\fduration_sec\x18\x05 \x01(\x05R\vdurationSec\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\"{\n" +
	"\x12CreateTrackRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x02 \x01(\tR\x06artist\x12\x14\n" +
	"\x05album\x18\x03 \x01(\tR\x05album\x12!\n" +
	"\fduration_sec\x18\x04 \x01(\x05R\vdurationSec\"9\n" +
	"\x13CreateTrackResponse\x12\"\n" +
	"\x05track\x18\x01 \x01(\v2\f.track.TrackR\x05track\"%\n" +
	"\x13GetTrackByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\":\n" +
	"\x14GetTrackByIDResponse\x12\"\n" +
	"\x05track\x18\x01 \x01(\v2\f.track.TrackR\x05track\"m\n" +
	"\x13GetAllTracksRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x02 \x01(\tR\x06artist\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x03R\x04page\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x03R\x05limit\"<\n" +
	"\x14GetAllTracksResponse\x12$\n" +
	"\x06tracks\x18\x01 \x03(\v2\f.track.TrackR\x06tracks\"\x8b\x01\n" +
	"\x12UpdateTrackRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x16\n" +
	"\x06artist\x18\x03 \x01(\tR\x06artist\x12\x14\n" +
	"\x05album\x18\x04 \x01(\tR\x05album\x12!\n" +
	"\fduration_sec\x18\x05 \x01(\x05R\vdurationSec\"/\n" +
	"\x13UpdateTrackResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"$\n" +
	"\x12DeleteTrackRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x13DeleteTrackResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\xf2\x02\n" +
	"\fTrackService\x12D\n" +
	"\vCreateTrack\x12\x19.track.CreateTrackRequest\x1a\x1a.track.CreateTrackResponse\x12G\n" +
	"\fGetTrackByID\x12\x1a.track.GetTrackByIDRequest\x1a\x1b.track.GetTrackByIDResponse\x12G\n" +
	"\fGetAllTracks\x12\x1a.track.GetAllTracksRequest\x1a\x1b.track.GetAllTracksResponse\x12D\n" +
	"\vUpdateTrack\x12\x19.track.UpdateTrackRequest\x1a\x1a.track.UpdateTrackResponse\x12D\n" +
	"\vDeleteTrack\x12\x19.track.DeleteTrackRequest\x1a\x1a.track.DeleteTrackResponseB)Z'github.com/your-org/track-service/protob\x06proto3"

var (
	file_proto_track_proto_rawDescOnce sync.Once
	file_proto_track_proto_rawDescData []byte
)

func file_proto_track_proto_rawDescGZIP() []byte {
	file_proto_track_proto_rawDescOnce.Do(func() {
		file_proto_track_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_track_proto_rawDesc), len(file_proto_track_proto_rawDesc)))
	})
	return file_proto_track_proto_rawDescData
}

var file_proto_track_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_track_proto_goTypes = []any{
	(*Track)(nil),                // 0: track.Track
	(*CreateTrackRequest)(nil),   // 1: track.CreateTrackRequest
	(*CreateTrackResponse)(nil),  // 2: track.CreateTrackResponse
	(*GetTrackByIDRequest)(nil),  // 3: track.GetTrackByIDRequest
	(*GetTrackByIDResponse)(nil), // 4: track.GetTrackByIDResponse
	(*GetAllTracksRequest)(nil),  // 5: track.GetAllTracksRequest
	(*GetAllTracksResponse)(nil), // 6: track.GetAllTracksResponse
	(*UpdateTrackRequest)(nil),   // 7: track.UpdateTrackRequest
	(*UpdateTrackResponse)(nil),  // 8: track.UpdateTrackResponse
	(*DeleteTrackRequest)(nil),   // 9: track.DeleteTrackRequest
	(*DeleteTrackResponse)(nil),  // 10: track.DeleteTrackResponse
}
var file_proto_track_proto_depIdxs = []int32{
	0,  // 0: track.CreateTrackResponse.track:type_name -> track.Track
	0,  // 1: track.GetTrackByIDResponse.track:type_name -> track.Track
	0,  // 2: track.GetAllTracksResponse.tracks:type_name -> track.Track
	1,  // 3: track.TrackService.CreateTrack:input_type -> track.CreateTrackRequest
	3,  // 4: track.TrackService.GetTrackByID:input_type -> track.GetTrackByIDRequest
	5,  // 5: track.TrackService.GetAllTracks:input_type -> track.GetAllTracksRequest
	7,  // 6: track.TrackService.UpdateTrack:input_type -> track.UpdateTrackRequest
	9,  // 7: track.TrackService.DeleteTrack:input_type -> track.DeleteTrackRequest
	2,  // 8: track.TrackService.CreateTrack:output_type -> track.CreateTrackResponse
	4,  // 9: track.TrackService.GetTrackByID:output_type -> track.GetTrackByIDResponse
	6,  // 10: track.TrackService.GetAllTracks:output_type -> track.GetAllTracksResponse
	8,  // 11: track.TrackService.UpdateTrack:output_type -> track.UpdateTrackResponse
	10, // 12: track.TrackService.DeleteTrack:output_type -> track.DeleteTrackResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_track_proto_init() }
func file_proto_track_proto_init() {
	if File_proto_track_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_track_proto_rawDesc), len(file_proto_track_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_track_proto_goTypes,
		DependencyIndexes: file_proto_track_proto_depIdxs,
		MessageInfos:      file_proto_track_proto_msgTypes,
	}.Build()
	File_proto_track_proto = out.File
	file_proto_track_proto_goTypes = nil
	file_proto_track_proto_depIdxs = nil
}
