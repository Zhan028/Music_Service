syntax = "proto3";

package user;
option go_package = "github.com/facelessEmptiness/user_service/proto;proto";

service UserService {
  // Basic authentication operations
  rpc RegisterUser(UserRequest) returns (UserResponse);
  rpc AuthenticateUser(AuthRequest) returns (AuthResponse);

  // User profile operations
  rpc GetUserProfile(UserID) returns (UserProfile);
  rpc GetUserByEmail(EmailRequest) returns (UserProfile);
  rpc UpdateUserProfile(UpdateRequest) returns (UserResponse);
  rpc ChangePassword(PasswordChangeRequest) returns (StatusResponse);

  // User management operations
  rpc DeleteUser(UserID) returns (StatusResponse);
  rpc ListUsers(ListRequest) returns (UserList);
}

// Request messages
message UserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message AuthRequest {
  string email = 1;
  string password = 2;
}

message UserID {
  string id = 1;
}

message EmailRequest {
  string email = 1;
}

message UpdateRequest {
  string id = 1;
  string name = 2;
  string email = 3;
  // Password is intentionally excluded from UpdateRequest
  // to enforce using ChangePassword for password updates
}

message PasswordChangeRequest {
  string id = 1;
  string current_password = 2;
  string new_password = 3;
}

message ListRequest {
  int64 page = 1;
  int64 limit = 2;
}

// Response messages
message UserResponse {
  string id = 1;
  string message = 2;
}

message AuthResponse {
  string token = 1;
  string user_id = 2;
  int64 expires_at = 3; // Unix timestamp for token expiration
}

message StatusResponse {
  bool success = 1;
  string message = 2;
}

message UserProfile {
  string id = 1;
  string name = 2;
  string email = 3;
  int64 created_at = 4; // Unix timestamp
  int64 updated_at = 5; // Unix timestamp
}

message UserList {
  repeated UserProfile users = 1;
  int64 total_count = 2;
  int64 page = 3;
  int64 limit = 4;
}